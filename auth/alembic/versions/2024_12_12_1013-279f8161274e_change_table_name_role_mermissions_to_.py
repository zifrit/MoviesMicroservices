"""change table name role_mermissions to permissions

Revision ID: 279f8161274e
Revises: b66384b50014
Create Date: 2024-12-12 10:13:15.644377

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "279f8161274e"
down_revision: Union[str, None] = "b66384b50014"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "permissions",
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_table(
        "association_roles_permissions",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.UUID(), nullable=False),
        sa.Column("permissions_id", sa.UUID(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["permissions_id"],
            ["permissions.id"],
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "role_id", "permissions_id", name="idx_unique_roles_permissions"
        ),
    )
    op.drop_table("association_roles_role_permissions")
    op.drop_table("role_permissions")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "role_permissions",
        sa.Column(
            "name", sa.VARCHAR(length=255), autoincrement=False, nullable=False
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "deleted_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=True,
        ),
        sa.Column("id", sa.UUID(), autoincrement=False, nullable=False),
        sa.PrimaryKeyConstraint("id", name="role_permissions_pkey"),
        sa.UniqueConstraint("name", name="role_permissions_name_key"),
        postgresql_ignore_search_path=False,
    )
    op.create_table(
        "association_roles_role_permissions",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("role_id", sa.UUID(), autoincrement=False, nullable=False),
        sa.Column(
            "role_permissions_id",
            sa.UUID(),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text("now()"),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
            name="association_roles_role_permissions_role_id_fkey",
        ),
        sa.ForeignKeyConstraint(
            ["role_permissions_id"],
            ["role_permissions.id"],
            name="association_roles_role_permissions_role_permissions_id_fkey",
        ),
        sa.PrimaryKeyConstraint(
            "id", name="association_roles_role_permissions_pkey"
        ),
        sa.UniqueConstraint(
            "role_id",
            "role_permissions_id",
            name="idx_unique_roles_role_permissions",
        ),
    )
    op.drop_table("association_roles_permissions")
    op.drop_table("permissions")
    # ### end Alembic commands ###
