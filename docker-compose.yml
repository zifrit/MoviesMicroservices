version: '3.9'

services:
  auth:
    build:
      context: ./auth
      dockerfile: Dockerfile
    container_name: auth_fastapi_app
    command: >
      bash -c "poetry run alembic upgrade head && poetry run python create_base_user.py && poetry run uvicorn main:app --host 0.0.0.0 --port 8001 --reload"
    env_file:
      - .env
    depends_on:
      - db
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8001/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - app-network

  movies:
    build:
      context: ./movies
      dockerfile: Dockerfile
    container_name: movies_fastapi_app
    command: >
      bash -c "poetry run alembic upgrade head && poetry run uvicorn main:app --host 0.0.0.0 --port 8002 --reload"
    env_file:
      - .env
    depends_on:
      - db
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8002/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - app-network

  comments:
    build:
      context: ./comments
      dockerfile: Dockerfile
    container_name: comments_fastapi_app
    command: >
      bash -c "poetry run alembic upgrade head && poetry run uvicorn main:app --host 0.0.0.0 --port 8003 --reload"
    env_file:
      - .env
    depends_on:
      - db
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8003/ || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    container_name: postgres_db
    env_file:
      - .env
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - app-network

  redis:
    image: redis:7.2.4
    container_name: redis
    command: redis-server
    restart: always
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - auth
      - movies
      - comments
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
